
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_TYPE_OF_STAFFING_ACTION] ON

DECLARE @mergeOutput1975014117 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_TYPE_OF_STAFFING_ACTION] AS [Target]
USING (VALUES
  (1,N'TSA01',N'Term/Indeterminate Advertised',N'Annoncée - Terme/Indéterminé',N'Term/Indeterminate Advertised',N'Annoncée - Terme/Indéterminé','2017-07-14T07:42:44.443',NULL,N'tony.paradis','2017-07-14T07:42:44.443',NULL,NULL)
 ,(2,N'TSA02',N'Term/Indeterminate Non-Advertised',N'Non-annoncée - Terme/Indéterminé',N'Term/Indeterminate Non-Advertised',N'Non-annoncée - Terme/Indéterminé','2017-07-14T07:42:44.443',NULL,N'tony.paradis','2017-07-14T07:42:44.443',NULL,NULL)
 ,(3,N'TSA03',N'Deployment',N'Mutation',N'Deployment',N'Mutation','2017-07-14T07:42:44.443',NULL,N'tony.paradis','2017-07-14T07:42:44.443',NULL,NULL)
 ,(4,N'TSA04',N'Hiring of a former student',N'Embauche d''un ancien étudiant',N'Hiring of a former student',N'Embauche d''un ancien étudiant','2017-07-14T07:42:44.443',NULL,N'tony.paradis','2017-07-14T07:42:44.443',NULL,NULL)
 ,(5,N'TSA05',N'Acting',N'Intérimaire',N'Acting',N'Intérimaire','2017-07-14T07:42:44.443',NULL,N'tony.paradis','2017-07-14T07:42:44.443',NULL,NULL)
) AS [Source] ([TYPE_OF_STAFFING_ACTION_ID],[TYPE_OF_STAFFING_ACTION_CODE],[TYPE_OF_STAFFING_ACTION_NAME_EN],[TYPE_OF_STAFFING_ACTION_NAME_FR],[TYPE_OF_STAFFING_ACTION_DESC_EN],[TYPE_OF_STAFFING_ACTION_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
ON ([Target].[TYPE_OF_STAFFING_ACTION_ID] = [Source].[TYPE_OF_STAFFING_ACTION_ID])
WHEN MATCHED AND (
	NULLIF([Source].[TYPE_OF_STAFFING_ACTION_CODE], [Target].[TYPE_OF_STAFFING_ACTION_CODE]) IS NOT NULL OR NULLIF([Target].[TYPE_OF_STAFFING_ACTION_CODE], [Source].[TYPE_OF_STAFFING_ACTION_CODE]) IS NOT NULL OR 
	NULLIF([Source].[TYPE_OF_STAFFING_ACTION_NAME_EN], [Target].[TYPE_OF_STAFFING_ACTION_NAME_EN]) IS NOT NULL OR NULLIF([Target].[TYPE_OF_STAFFING_ACTION_NAME_EN], [Source].[TYPE_OF_STAFFING_ACTION_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[TYPE_OF_STAFFING_ACTION_NAME_FR], [Target].[TYPE_OF_STAFFING_ACTION_NAME_FR]) IS NOT NULL OR NULLIF([Target].[TYPE_OF_STAFFING_ACTION_NAME_FR], [Source].[TYPE_OF_STAFFING_ACTION_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[TYPE_OF_STAFFING_ACTION_DESC_EN], [Target].[TYPE_OF_STAFFING_ACTION_DESC_EN]) IS NOT NULL OR NULLIF([Target].[TYPE_OF_STAFFING_ACTION_DESC_EN], [Source].[TYPE_OF_STAFFING_ACTION_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[TYPE_OF_STAFFING_ACTION_DESC_FR], [Target].[TYPE_OF_STAFFING_ACTION_DESC_FR]) IS NOT NULL OR NULLIF([Target].[TYPE_OF_STAFFING_ACTION_DESC_FR], [Source].[TYPE_OF_STAFFING_ACTION_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[TYPE_OF_STAFFING_ACTION_CODE] = [Source].[TYPE_OF_STAFFING_ACTION_CODE], 
  [Target].[TYPE_OF_STAFFING_ACTION_NAME_EN] = [Source].[TYPE_OF_STAFFING_ACTION_NAME_EN], 
  [Target].[TYPE_OF_STAFFING_ACTION_NAME_FR] = [Source].[TYPE_OF_STAFFING_ACTION_NAME_FR], 
  [Target].[TYPE_OF_STAFFING_ACTION_DESC_EN] = [Source].[TYPE_OF_STAFFING_ACTION_DESC_EN], 
  [Target].[TYPE_OF_STAFFING_ACTION_DESC_FR] = [Source].[TYPE_OF_STAFFING_ACTION_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([TYPE_OF_STAFFING_ACTION_ID],[TYPE_OF_STAFFING_ACTION_CODE],[TYPE_OF_STAFFING_ACTION_NAME_EN],[TYPE_OF_STAFFING_ACTION_NAME_FR],[TYPE_OF_STAFFING_ACTION_DESC_EN],[TYPE_OF_STAFFING_ACTION_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
 VALUES([Source].[TYPE_OF_STAFFING_ACTION_ID],[Source].[TYPE_OF_STAFFING_ACTION_CODE],[Source].[TYPE_OF_STAFFING_ACTION_NAME_EN],[Source].[TYPE_OF_STAFFING_ACTION_NAME_FR],[Source].[TYPE_OF_STAFFING_ACTION_DESC_EN],[Source].[TYPE_OF_STAFFING_ACTION_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[DATE_CREATED],[Source].[USER_UPDATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput1975014117;

DECLARE @mergeError1975014117 int,
@mergeCount1975014117 int,
@mergeCountIns1975014117 int,
@mergeCountUpd1975014117 int,
@mergeCountDel1975014117 int
SELECT @mergeError1975014117 = @@ERROR
SELECT @mergeCount1975014117 = COUNT(1), @mergeCountIns1975014117 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd1975014117 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel1975014117 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput1975014117
IF @mergeError1975014117 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_TYPE_OF_STAFFING_ACTION]. Rows affected: ' + CAST(@mergeCount1975014117 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_TYPE_OF_STAFFING_ACTION] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount1975014117,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns1975014117,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd1975014117,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel1975014117,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_TYPE_OF_STAFFING_ACTION] OFF
SET NOCOUNT OFF




