
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_RELOCATION_EXPENSE] ON

DECLARE @mergeOutput25767149 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_RELOCATION_EXPENSE] AS [Target]
USING (VALUES
  (1,N'Empee',N'Employee Requested',N'À la demande de l’employé ',N'Employee Requested',N'À la demande de l’employé ','2013-01-10T00:00:00','2020-01-17T09:12:09.043',N'HRDC-DRHC\elena.akhmentova','2013-01-10T11:35:30.930',N'michel.tardif','2018-09-24T15:17:39.810')
 ,(2,N'Emper',N'Employer Requested',N'À la demande de l''employeur',N'Employer Requested',N'À la demande de l''employeur','2013-01-10T11:35:30.957','2020-01-17T09:12:09.043',N'HRDC-DRHC\elena.akhmentova','2013-01-10T11:35:30.957',NULL,NULL)
 ,(4,N'NA',N'Not applicable',N'Sans objet',N'Not applicable',N'Sans objet','2013-02-01T00:00:00','2020-01-17T09:12:09.043',N'Alain Bélanger','2013-02-01T00:00:00',NULL,NULL)
 ,(5,N'No',N'No*',N'Non : *',N'No*',N'Non : *',NULL,NULL,N'dbo','2020-01-17T09:12:09.043',NULL,NULL)
 ,(6,N'Yes',N'Yes: You must attach the NRO email*',N'Oui : Vous devez joindre le courriel du BNR*',N'Yes: You must attach the NRO email*',N'Oui : Vous devez joindre le courriel du BNR*',NULL,NULL,N'dbo','2020-01-17T09:12:09.043',NULL,NULL)
) AS [Source] ([RELOCATION_EXPENSE_ID],[RELOCATION_EXPENSE_CODE],[RELOCATION_EXPENSE_NAME_EN],[RELOCATION_EXPENSE_NAME_FR],[RELOCATION_EXPENSE_DESC_EN],[RELOCATION_EXPENSE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
ON ([Target].[RELOCATION_EXPENSE_ID] = [Source].[RELOCATION_EXPENSE_ID])
WHEN MATCHED AND (
	NULLIF([Source].[RELOCATION_EXPENSE_CODE], [Target].[RELOCATION_EXPENSE_CODE]) IS NOT NULL OR NULLIF([Target].[RELOCATION_EXPENSE_CODE], [Source].[RELOCATION_EXPENSE_CODE]) IS NOT NULL OR 
	NULLIF([Source].[RELOCATION_EXPENSE_NAME_EN], [Target].[RELOCATION_EXPENSE_NAME_EN]) IS NOT NULL OR NULLIF([Target].[RELOCATION_EXPENSE_NAME_EN], [Source].[RELOCATION_EXPENSE_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[RELOCATION_EXPENSE_NAME_FR], [Target].[RELOCATION_EXPENSE_NAME_FR]) IS NOT NULL OR NULLIF([Target].[RELOCATION_EXPENSE_NAME_FR], [Source].[RELOCATION_EXPENSE_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[RELOCATION_EXPENSE_DESC_EN], [Target].[RELOCATION_EXPENSE_DESC_EN]) IS NOT NULL OR NULLIF([Target].[RELOCATION_EXPENSE_DESC_EN], [Source].[RELOCATION_EXPENSE_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[RELOCATION_EXPENSE_DESC_FR], [Target].[RELOCATION_EXPENSE_DESC_FR]) IS NOT NULL OR NULLIF([Target].[RELOCATION_EXPENSE_DESC_FR], [Source].[RELOCATION_EXPENSE_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[RELOCATION_EXPENSE_CODE] = [Source].[RELOCATION_EXPENSE_CODE], 
  [Target].[RELOCATION_EXPENSE_NAME_EN] = [Source].[RELOCATION_EXPENSE_NAME_EN], 
  [Target].[RELOCATION_EXPENSE_NAME_FR] = [Source].[RELOCATION_EXPENSE_NAME_FR], 
  [Target].[RELOCATION_EXPENSE_DESC_EN] = [Source].[RELOCATION_EXPENSE_DESC_EN], 
  [Target].[RELOCATION_EXPENSE_DESC_FR] = [Source].[RELOCATION_EXPENSE_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([RELOCATION_EXPENSE_ID],[RELOCATION_EXPENSE_CODE],[RELOCATION_EXPENSE_NAME_EN],[RELOCATION_EXPENSE_NAME_FR],[RELOCATION_EXPENSE_DESC_EN],[RELOCATION_EXPENSE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
 VALUES([Source].[RELOCATION_EXPENSE_ID],[Source].[RELOCATION_EXPENSE_CODE],[Source].[RELOCATION_EXPENSE_NAME_EN],[Source].[RELOCATION_EXPENSE_NAME_FR],[Source].[RELOCATION_EXPENSE_DESC_EN],[Source].[RELOCATION_EXPENSE_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[DATE_CREATED],[Source].[USER_UPDATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput25767149;

DECLARE @mergeError25767149 int,
@mergeCount25767149 int,
@mergeCountIns25767149 int,
@mergeCountUpd25767149 int,
@mergeCountDel25767149 int
SELECT @mergeError25767149 = @@ERROR
SELECT @mergeCount25767149 = COUNT(1), @mergeCountIns25767149 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd25767149 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel25767149 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput25767149
IF @mergeError25767149 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_RELOCATION_EXPENSE]. Rows affected: ' + CAST(@mergeCount25767149 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_RELOCATION_EXPENSE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount25767149,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns25767149,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd25767149,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel25767149,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_RELOCATION_EXPENSE] OFF
SET NOCOUNT OFF




