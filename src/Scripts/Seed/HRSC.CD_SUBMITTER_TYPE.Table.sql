
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

DECLARE @mergeOutput930102354 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_SUBMITTER_TYPE] AS [Target]
USING (VALUES
  (1,N'EMP',N'Employee',N'Employé',NULL,NULL,NULL,N'HRSC5.0',NULL,'2021-10-30T05:25:26.987',NULL)
 ,(2,N'MGR',N'Manager',N'Gestionnaire',NULL,NULL,NULL,N'HRSC5.0',NULL,'2021-10-30T05:25:26.990',NULL)
 ,(3,N'AGENT',N'Agent',N'Agent',NULL,NULL,NULL,N'HRSC5.0',NULL,'2021-10-30T05:25:26.990',NULL)
) AS [Source] ([SUBMITTER_TYPE_ID],[SUBMITTER_TYPE_CODE],[SUBMITTER_TYPE_NAME_EN],[SUBMITTER_TYPE_NAME_FR],[SUBMITTER_TYPE_DESC_EN],[SUBMITTER_TYPE_DESC_FR],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED])
ON ([Target].[SUBMITTER_TYPE_ID] = [Source].[SUBMITTER_TYPE_ID])
WHEN MATCHED AND (
	NULLIF([Source].[SUBMITTER_TYPE_CODE], [Target].[SUBMITTER_TYPE_CODE]) IS NOT NULL OR NULLIF([Target].[SUBMITTER_TYPE_CODE], [Source].[SUBMITTER_TYPE_CODE]) IS NOT NULL OR 
	NULLIF([Source].[SUBMITTER_TYPE_NAME_EN], [Target].[SUBMITTER_TYPE_NAME_EN]) IS NOT NULL OR NULLIF([Target].[SUBMITTER_TYPE_NAME_EN], [Source].[SUBMITTER_TYPE_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[SUBMITTER_TYPE_NAME_FR], [Target].[SUBMITTER_TYPE_NAME_FR]) IS NOT NULL OR NULLIF([Target].[SUBMITTER_TYPE_NAME_FR], [Source].[SUBMITTER_TYPE_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[SUBMITTER_TYPE_DESC_EN], [Target].[SUBMITTER_TYPE_DESC_EN]) IS NOT NULL OR NULLIF([Target].[SUBMITTER_TYPE_DESC_EN], [Source].[SUBMITTER_TYPE_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[SUBMITTER_TYPE_DESC_FR], [Target].[SUBMITTER_TYPE_DESC_FR]) IS NOT NULL OR NULLIF([Target].[SUBMITTER_TYPE_DESC_FR], [Source].[SUBMITTER_TYPE_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[SUBMITTER_TYPE_CODE] = [Source].[SUBMITTER_TYPE_CODE], 
  [Target].[SUBMITTER_TYPE_NAME_EN] = [Source].[SUBMITTER_TYPE_NAME_EN], 
  [Target].[SUBMITTER_TYPE_NAME_FR] = [Source].[SUBMITTER_TYPE_NAME_FR], 
  [Target].[SUBMITTER_TYPE_DESC_EN] = [Source].[SUBMITTER_TYPE_DESC_EN], 
  [Target].[SUBMITTER_TYPE_DESC_FR] = [Source].[SUBMITTER_TYPE_DESC_FR], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([SUBMITTER_TYPE_ID],[SUBMITTER_TYPE_CODE],[SUBMITTER_TYPE_NAME_EN],[SUBMITTER_TYPE_NAME_FR],[SUBMITTER_TYPE_DESC_EN],[SUBMITTER_TYPE_DESC_FR],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED])
 VALUES([Source].[SUBMITTER_TYPE_ID],[Source].[SUBMITTER_TYPE_CODE],[Source].[SUBMITTER_TYPE_NAME_EN],[Source].[SUBMITTER_TYPE_NAME_FR],[Source].[SUBMITTER_TYPE_DESC_EN],[Source].[SUBMITTER_TYPE_DESC_FR],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[USER_UPDATED],[Source].[DATE_CREATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput930102354;

DECLARE @mergeError930102354 int,
@mergeCount930102354 int,
@mergeCountIns930102354 int,
@mergeCountUpd930102354 int,
@mergeCountDel930102354 int
SELECT @mergeError930102354 = @@ERROR
SELECT @mergeCount930102354 = COUNT(1), @mergeCountIns930102354 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd930102354 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel930102354 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput930102354
IF @mergeError930102354 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_SUBMITTER_TYPE]. Rows affected: ' + CAST(@mergeCount930102354 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_SUBMITTER_TYPE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount930102354,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns930102354,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd930102354,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel930102354,0) AS VARCHAR(100)) + ')' ;
 END



SET NOCOUNT OFF




