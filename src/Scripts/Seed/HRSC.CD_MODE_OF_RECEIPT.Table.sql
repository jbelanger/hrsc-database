
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_MODE_OF_RECEIPT] ON

DECLARE @mergeOutput1189579276 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_MODE_OF_RECEIPT] AS [Target]
USING (VALUES
  (3,N'Portal',N'Portail',N'Portal',N'Portail','2011-12-09T00:00:00','2012-05-17T09:25:13.347',N'Ga?tan',N'Lafortune, Jean-Luc [NC]','2011-12-09T00:00:00','2012-05-17T09:25:13.347',N'PORT')
 ,(4,N'Phone',N'T?l?phone',N'Phone',N'T?l?phone','2011-12-09T00:00:00',NULL,N'Ga?tan',N'Nguyen, David [NC]','2011-12-09T00:00:00','2012-10-30T11:40:03.880',N'PHONE')
 ,(5,N'Email',N'Courriel',N'Email',N'Courriel','2011-12-09T15:44:20.703',NULL,N'Ga?tan',N'System','2011-12-09T15:44:20.703','2012-01-05T11:35:42.837',N'MAIL')
 ,(7,N'Peoplesoft',N'Peoplesoft',N'Peoplesoft',N'Peoplesoft','2021-06-18T21:35:52.187','2022-04-01T14:28:21.150',N'HRSC 4.10',NULL,'2021-06-18T21:35:52.187',NULL,N'PPSFT')
 ,(8,N'Data Import',N'Importation de donn?es',N'Data Import',N'Importation de donn?es','2023-02-01T20:44:47.737','2023-02-01T20:44:47.737',N'M-A',NULL,'2023-02-01T20:44:47.737',NULL,N'DATAI')
) AS [Source] ([MODE_OF_RECEIPT_ID],[MODE_OF_RECEIPT_NAME_EN],[MODE_OF_RECEIPT_NAME_FR],[MODE_OF_RECEIPT_DESC_EN],[MODE_OF_RECEIPT_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[MODE_OF_RECEIPT_CODE])
ON ([Target].[MODE_OF_RECEIPT_ID] = [Source].[MODE_OF_RECEIPT_ID])
WHEN MATCHED AND (
	NULLIF([Source].[MODE_OF_RECEIPT_NAME_EN], [Target].[MODE_OF_RECEIPT_NAME_EN]) IS NOT NULL OR NULLIF([Target].[MODE_OF_RECEIPT_NAME_EN], [Source].[MODE_OF_RECEIPT_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[MODE_OF_RECEIPT_NAME_FR], [Target].[MODE_OF_RECEIPT_NAME_FR]) IS NOT NULL OR NULLIF([Target].[MODE_OF_RECEIPT_NAME_FR], [Source].[MODE_OF_RECEIPT_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[MODE_OF_RECEIPT_DESC_EN], [Target].[MODE_OF_RECEIPT_DESC_EN]) IS NOT NULL OR NULLIF([Target].[MODE_OF_RECEIPT_DESC_EN], [Source].[MODE_OF_RECEIPT_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[MODE_OF_RECEIPT_DESC_FR], [Target].[MODE_OF_RECEIPT_DESC_FR]) IS NOT NULL OR NULLIF([Target].[MODE_OF_RECEIPT_DESC_FR], [Source].[MODE_OF_RECEIPT_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[MODE_OF_RECEIPT_CODE], [Target].[MODE_OF_RECEIPT_CODE]) IS NOT NULL OR NULLIF([Target].[MODE_OF_RECEIPT_CODE], [Source].[MODE_OF_RECEIPT_CODE]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[MODE_OF_RECEIPT_NAME_EN] = [Source].[MODE_OF_RECEIPT_NAME_EN], 
  [Target].[MODE_OF_RECEIPT_NAME_FR] = [Source].[MODE_OF_RECEIPT_NAME_FR], 
  [Target].[MODE_OF_RECEIPT_DESC_EN] = [Source].[MODE_OF_RECEIPT_DESC_EN], 
  [Target].[MODE_OF_RECEIPT_DESC_FR] = [Source].[MODE_OF_RECEIPT_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED], 
  [Target].[MODE_OF_RECEIPT_CODE] = [Source].[MODE_OF_RECEIPT_CODE]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([MODE_OF_RECEIPT_ID],[MODE_OF_RECEIPT_NAME_EN],[MODE_OF_RECEIPT_NAME_FR],[MODE_OF_RECEIPT_DESC_EN],[MODE_OF_RECEIPT_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[MODE_OF_RECEIPT_CODE])
 VALUES([Source].[MODE_OF_RECEIPT_ID],[Source].[MODE_OF_RECEIPT_NAME_EN],[Source].[MODE_OF_RECEIPT_NAME_FR],[Source].[MODE_OF_RECEIPT_DESC_EN],[Source].[MODE_OF_RECEIPT_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[USER_UPDATED],[Source].[DATE_CREATED],[Source].[DATE_UPDATED],[Source].[MODE_OF_RECEIPT_CODE])
OUTPUT $action INTO @mergeOutput1189579276;

DECLARE @mergeError1189579276 int,
@mergeCount1189579276 int,
@mergeCountIns1189579276 int,
@mergeCountUpd1189579276 int,
@mergeCountDel1189579276 int
SELECT @mergeError1189579276 = @@ERROR
SELECT @mergeCount1189579276 = COUNT(1), @mergeCountIns1189579276 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd1189579276 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel1189579276 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput1189579276
IF @mergeError1189579276 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_MODE_OF_RECEIPT]. Rows affected: ' + CAST(@mergeCount1189579276 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_MODE_OF_RECEIPT] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount1189579276,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns1189579276,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd1189579276,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel1189579276,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_MODE_OF_RECEIPT] OFF
SET NOCOUNT OFF




