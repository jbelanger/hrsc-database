
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

DECLARE @mergeOutput647777465 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_ACCOMODATION_REQUIRED] AS [Target]
USING (VALUES
  (1,N'ACC01',N'None',N'Aucune',N'None',N'Aucune',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',NULL,NULL)
 ,(2,N'ACC02',N'Attention Disorders',N'Troubles de l''attention',N'Attention Disorders',N'Troubles de l''attention',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',N'M-A','2023-08-02T10:46:56.250')
 ,(3,N'ACC03',N'Chronic and/or Medical Disabilities',N'Maladies chroniques et/ou troubles médicaux',N'Chronic and/or Medical Disabilities',N'Maladies chroniques et/ou troubles médicaux',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',N'M-A','2023-08-02T10:46:56.267')
 ,(4,N'ACC04',N'Hearing Disabilities',N'Handicap auditif',N'Hearing Disabilities',N'Handicap auditif',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',NULL,NULL)
 ,(5,N'ACC05',N'Learning Disabilities',N'Troubles d’apprentissage',N'Learning Disabilities',N'Troubles d’apprentissage',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',NULL,NULL)
 ,(6,N'ACC06',N'Mobility or Physical Disabilities',N'Déficience physique ou de mobilité',N'Mobility or Physical Disabilities',N'Déficience physique ou de mobilité',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',N'M-A','2023-08-02T10:46:56.280')
 ,(7,N'ACC07',N'Neurological Disorders',N'Troubles neurologiques',N'Neurological Disorders',N'Troubles neurologiques',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',NULL,NULL)
 ,(8,N'ACC08',N'Psychiatric, Psychological, and/or Emotional Disabilities',N'Handicap psychiatrique, psychologique, et/ou émotionnel',N'Psychiatric, Psychological, and/or Emotional Disabilities',N'Handicap psychiatrique, psychologique, et/ou émotionnel',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',N'M-A','2023-08-02T10:46:56.297')
 ,(9,N'ACC09',N'Speech and Language Disabilities',N'Troubles phonologiques et troubles du langage',N'Speech and Language Disabilities',N'Troubles phonologiques et troubles du langage',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',NULL,NULL)
 ,(10,N'ACC10',N'Temporary Conditions and Other',N'Conditions temporaires et autres',N'Temporary Conditions and Other',N'Conditions temporaires et autres',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',NULL,NULL)
 ,(11,N'ACC11',N'Visual Condition',N'Condition visuelle',N'Visual Condition',N'Condition visuelle',NULL,NULL,N'Michel Tardif','2017-02-07T00:00:00',NULL,NULL)
 ,(12,N'ACC12',N'Person prefers to provide directly to HR upon request',N'La personne préfère fournir directement aux RH sur demande',N'Person prefers to provide directly to HR upon request',N'La personne préfère fournir directement aux RH sur demande','2023-02-10T10:03:57.533',NULL,N'francois.girouard','2023-02-10T10:03:57.533',N'francois.girouard','2023-02-10T10:03:57.533')
) AS [Source] ([ACCOMODATION_REQUIRED_ID],[ACCOMODATION_REQUIRED_CODE],[ACCOMODATION_REQUIRED_NAME_EN],[ACCOMODATION_REQUIRED_NAME_FR],[ACCOMODATION_REQUIRED_DESC_EN],[ACCOMODATION_REQUIRED_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
ON ([Target].[ACCOMODATION_REQUIRED_ID] = [Source].[ACCOMODATION_REQUIRED_ID])
WHEN MATCHED AND (
	NULLIF([Source].[ACCOMODATION_REQUIRED_CODE], [Target].[ACCOMODATION_REQUIRED_CODE]) IS NOT NULL OR NULLIF([Target].[ACCOMODATION_REQUIRED_CODE], [Source].[ACCOMODATION_REQUIRED_CODE]) IS NOT NULL OR 
	NULLIF([Source].[ACCOMODATION_REQUIRED_NAME_EN], [Target].[ACCOMODATION_REQUIRED_NAME_EN]) IS NOT NULL OR NULLIF([Target].[ACCOMODATION_REQUIRED_NAME_EN], [Source].[ACCOMODATION_REQUIRED_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[ACCOMODATION_REQUIRED_NAME_FR], [Target].[ACCOMODATION_REQUIRED_NAME_FR]) IS NOT NULL OR NULLIF([Target].[ACCOMODATION_REQUIRED_NAME_FR], [Source].[ACCOMODATION_REQUIRED_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[ACCOMODATION_REQUIRED_DESC_EN], [Target].[ACCOMODATION_REQUIRED_DESC_EN]) IS NOT NULL OR NULLIF([Target].[ACCOMODATION_REQUIRED_DESC_EN], [Source].[ACCOMODATION_REQUIRED_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[ACCOMODATION_REQUIRED_DESC_FR], [Target].[ACCOMODATION_REQUIRED_DESC_FR]) IS NOT NULL OR NULLIF([Target].[ACCOMODATION_REQUIRED_DESC_FR], [Source].[ACCOMODATION_REQUIRED_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[ACCOMODATION_REQUIRED_CODE] = [Source].[ACCOMODATION_REQUIRED_CODE], 
  [Target].[ACCOMODATION_REQUIRED_NAME_EN] = [Source].[ACCOMODATION_REQUIRED_NAME_EN], 
  [Target].[ACCOMODATION_REQUIRED_NAME_FR] = [Source].[ACCOMODATION_REQUIRED_NAME_FR], 
  [Target].[ACCOMODATION_REQUIRED_DESC_EN] = [Source].[ACCOMODATION_REQUIRED_DESC_EN], 
  [Target].[ACCOMODATION_REQUIRED_DESC_FR] = [Source].[ACCOMODATION_REQUIRED_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([ACCOMODATION_REQUIRED_ID],[ACCOMODATION_REQUIRED_CODE],[ACCOMODATION_REQUIRED_NAME_EN],[ACCOMODATION_REQUIRED_NAME_FR],[ACCOMODATION_REQUIRED_DESC_EN],[ACCOMODATION_REQUIRED_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
 VALUES([Source].[ACCOMODATION_REQUIRED_ID],[Source].[ACCOMODATION_REQUIRED_CODE],[Source].[ACCOMODATION_REQUIRED_NAME_EN],[Source].[ACCOMODATION_REQUIRED_NAME_FR],[Source].[ACCOMODATION_REQUIRED_DESC_EN],[Source].[ACCOMODATION_REQUIRED_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[DATE_CREATED],[Source].[USER_UPDATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput647777465;

DECLARE @mergeError647777465 int,
@mergeCount647777465 int,
@mergeCountIns647777465 int,
@mergeCountUpd647777465 int,
@mergeCountDel647777465 int
SELECT @mergeError647777465 = @@ERROR
SELECT @mergeCount647777465 = COUNT(1), @mergeCountIns647777465 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd647777465 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel647777465 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput647777465
IF @mergeError647777465 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_ACCOMODATION_REQUIRED]. Rows affected: ' + CAST(@mergeCount647777465 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_ACCOMODATION_REQUIRED] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount647777465,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns647777465,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd647777465,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel647777465,0) AS VARCHAR(100)) + ')' ;
 END



SET NOCOUNT OFF




