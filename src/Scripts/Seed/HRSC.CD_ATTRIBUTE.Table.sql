
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_ATTRIBUTE] ON

DECLARE @mergeOutput530205039 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_ATTRIBUTE] AS [Target]
USING (VALUES
  (1,N'Dispatch',N'HRSC 4.13',N'HRSC 4.13','2022-12-07T00:00:00','2022-12-07T00:00:00')
 ,(3,N'PreApproval',N'HRSC 4.13',N'HRSC 4.13','2022-12-07T00:00:00','2022-12-07T00:00:00')
 ,(4,N'COI',N'HRSC 4.13',N'HRSC 4.13','2022-12-07T00:00:00','2022-12-07T00:00:00')
 ,(5,N'SeparationClearance',N'HRSC 4.13',N'HRSC 4.13','2022-12-07T00:00:00','2022-12-07T00:00:00')
 ,(6,N'IITB',N'HRSC 4.13',N'HRSC 4.13','2022-12-07T00:00:00','2022-12-07T00:00:00')
 ,(7,N'QualityAssurance',N'HRSC 4.13',N'HRSC 4.13','2022-12-07T00:00:00','2022-12-07T00:00:00')
 ,(8,N'FINANCE',N'HRSC 4.13',N'HRSC 4.13','2022-12-07T00:00:00','2022-12-07T00:00:00')
) AS [Source] ([ATTRIBUTE_ID],[ATTRIBUTE_NAME],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED])
ON ([Target].[ATTRIBUTE_ID] = [Source].[ATTRIBUTE_ID])
WHEN MATCHED AND (
	NULLIF([Source].[ATTRIBUTE_NAME], [Target].[ATTRIBUTE_NAME]) IS NOT NULL OR NULLIF([Target].[ATTRIBUTE_NAME], [Source].[ATTRIBUTE_NAME]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[ATTRIBUTE_NAME] = [Source].[ATTRIBUTE_NAME], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([ATTRIBUTE_ID],[ATTRIBUTE_NAME],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED])
 VALUES([Source].[ATTRIBUTE_ID],[Source].[ATTRIBUTE_NAME],[Source].[USER_CREATED],[Source].[USER_UPDATED],[Source].[DATE_CREATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput530205039;

DECLARE @mergeError530205039 int,
@mergeCount530205039 int,
@mergeCountIns530205039 int,
@mergeCountUpd530205039 int,
@mergeCountDel530205039 int
SELECT @mergeError530205039 = @@ERROR
SELECT @mergeCount530205039 = COUNT(1), @mergeCountIns530205039 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd530205039 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel530205039 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput530205039
IF @mergeError530205039 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_ATTRIBUTE]. Rows affected: ' + CAST(@mergeCount530205039 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_ATTRIBUTE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount530205039,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns530205039,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd530205039,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel530205039,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_ATTRIBUTE] OFF
SET NOCOUNT OFF




