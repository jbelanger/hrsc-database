
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_POSITION_REQUEST_TYPE] ON

DECLARE @mergeOutput1861581670 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_POSITION_REQUEST_TYPE] AS [Target]
USING (VALUES
  (1,N'INIT',N'Initial appointment',N'Nomination initiale',N'Initial appointment',N'Nomination initiale','2012-01-30T00:00:00',NULL,N'EA','2013-01-30T00:00:00',NULL,NULL)
 ,(2,N'EXTEN',N'Extension',N'Prolongation',N'Extension',N'Prolongation','2012-01-30T00:00:00',NULL,N'EA','2013-01-30T00:00:00',NULL,NULL)
 ,(3,N'REEMP',N'Re-employment',N'R?emploi',N'Re-employment',N'R?emploi','2013-01-31T00:00:00',NULL,N'EA','2013-01-31T00:00:00',NULL,NULL)
 ,(10,N'INTAD',N'Internal Advertised',N'Interne annonc?',N'Internal Advertised',N'Interne annonc?','2013-02-19T14:05:28.247',NULL,N'HRDC-DRHC\oksana.zhukova','2013-02-19T14:05:28.247',NULL,NULL)
 ,(11,N'EXTAD',N'External Advertised',N'Externe annonc?',N'External Advertised',N'Externe annonc?','2013-02-19T14:07:02.460',NULL,N'HRDC-DRHC\oksana.zhukova','2013-02-19T14:07:02.460',NULL,NULL)
 ,(12,N'INNAD',N'Internal Non-Advertised',N'Interne non-annonc?',N'Internal Non-Advertised',N'Interne non-annonc?','2017-07-14T07:42:44.093',NULL,N'paradis.tony','2017-07-14T07:42:44.093',NULL,NULL)
 ,(13,N'EXNAD',N'External Non-Advertised',N'Externe non-annonc?',N'External Non-Advertised',N'Externe non-annonc?','2017-07-14T07:42:44.103',NULL,N'paradis.tony','2017-07-14T07:42:44.103',NULL,NULL)
 ,(14,N'ACIN',N'Acting Non-advertised',N'Int?rimaire non-annonc?',N'Acting Non-advertised',N'Int?rimaire non-annonc?','2020-01-17T09:12:09.107',NULL,N'HRSC 4.9','2020-01-17T09:12:09.107',NULL,NULL)
 ,(15,N'ACIN',N'Acting Non-advertised',N'Int?rimaire non-annonc?',N'Acting Non-advertised',N'Int?rimaire non-annonc?','2020-01-17T09:12:09.107',NULL,N'HRSC 4.9','2020-01-17T09:12:09.107',NULL,NULL)
 ,(16,N'2',N'Deployment (Advertised)',N'Mutation (Annonc?)',N'Deployment (Advertised)',N'Mutation (Annonc?)','2020-01-17T09:14:59.020','2020-01-17T09:14:59.020',N'ISL_INSERT','2020-01-17T09:14:59.020',NULL,NULL)
 ,(17,N'3',N'Acting - More than 4 Months (A',N'Int?rimaire ? plus de 4 mois (',N'Acting - More than 4 Months (Advertised)',N'Int?rimaire ? plus de 4 mois (annonc?)','2020-01-17T09:14:59.020','2020-01-17T09:14:59.020',N'ISL_INSERT','2020-01-17T09:14:59.020',NULL,NULL)
 ,(18,N'21',N'Other Dept Pool (Int Advertise',N'Bassin hors du ministi?re (int',N'Other Dept Pool (Int Advertised)',N'Bassin hors du ministi?re (interne)','2020-01-17T09:14:59.020','2020-01-17T09:14:59.020',N'ISL_INSERT','2020-01-17T09:14:59.020',NULL,NULL)
 ,(19,N'22',N'Other Dept Pool (Ext Advertise',N'Bassin hors du ministi?re (ext',N'Other Dept Pool (Ext Advertised)',N'Bassin hors du ministi?re (externe)','2020-01-17T09:14:59.020','2020-01-17T09:14:59.020',N'ISL_INSERT','2020-01-17T09:14:59.020',NULL,NULL)
 ,(20,N'EXL4M',N'Extension of an appointment of less than 4 months',N'Prolongation d?une nomination de moins de 4 mois',N'Extension of an appointment of less than 4 months',N'Prolongation d?une nomination de moins de 4 mois','2021-10-30T06:51:07.537',NULL,N'system','2021-10-30T06:51:07.537',NULL,NULL)
) AS [Source] ([POSITION_REQUEST_TYPE_ID],[POSITION_REQUEST_TYPE_CODE],[POSITION_REQUEST_TYPE_NAME_EN],[POSITION_REQUEST_TYPE_NAME_FR],[POSITION_REQUEST_TYPE_DESC_EN],[POSITION_REQUEST_TYPE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
ON ([Target].[POSITION_REQUEST_TYPE_ID] = [Source].[POSITION_REQUEST_TYPE_ID])
WHEN MATCHED AND (
	NULLIF([Source].[POSITION_REQUEST_TYPE_CODE], [Target].[POSITION_REQUEST_TYPE_CODE]) IS NOT NULL OR NULLIF([Target].[POSITION_REQUEST_TYPE_CODE], [Source].[POSITION_REQUEST_TYPE_CODE]) IS NOT NULL OR 
	NULLIF([Source].[POSITION_REQUEST_TYPE_NAME_EN], [Target].[POSITION_REQUEST_TYPE_NAME_EN]) IS NOT NULL OR NULLIF([Target].[POSITION_REQUEST_TYPE_NAME_EN], [Source].[POSITION_REQUEST_TYPE_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[POSITION_REQUEST_TYPE_NAME_FR], [Target].[POSITION_REQUEST_TYPE_NAME_FR]) IS NOT NULL OR NULLIF([Target].[POSITION_REQUEST_TYPE_NAME_FR], [Source].[POSITION_REQUEST_TYPE_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[POSITION_REQUEST_TYPE_DESC_EN], [Target].[POSITION_REQUEST_TYPE_DESC_EN]) IS NOT NULL OR NULLIF([Target].[POSITION_REQUEST_TYPE_DESC_EN], [Source].[POSITION_REQUEST_TYPE_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[POSITION_REQUEST_TYPE_DESC_FR], [Target].[POSITION_REQUEST_TYPE_DESC_FR]) IS NOT NULL OR NULLIF([Target].[POSITION_REQUEST_TYPE_DESC_FR], [Source].[POSITION_REQUEST_TYPE_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[POSITION_REQUEST_TYPE_CODE] = [Source].[POSITION_REQUEST_TYPE_CODE], 
  [Target].[POSITION_REQUEST_TYPE_NAME_EN] = [Source].[POSITION_REQUEST_TYPE_NAME_EN], 
  [Target].[POSITION_REQUEST_TYPE_NAME_FR] = [Source].[POSITION_REQUEST_TYPE_NAME_FR], 
  [Target].[POSITION_REQUEST_TYPE_DESC_EN] = [Source].[POSITION_REQUEST_TYPE_DESC_EN], 
  [Target].[POSITION_REQUEST_TYPE_DESC_FR] = [Source].[POSITION_REQUEST_TYPE_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([POSITION_REQUEST_TYPE_ID],[POSITION_REQUEST_TYPE_CODE],[POSITION_REQUEST_TYPE_NAME_EN],[POSITION_REQUEST_TYPE_NAME_FR],[POSITION_REQUEST_TYPE_DESC_EN],[POSITION_REQUEST_TYPE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
 VALUES([Source].[POSITION_REQUEST_TYPE_ID],[Source].[POSITION_REQUEST_TYPE_CODE],[Source].[POSITION_REQUEST_TYPE_NAME_EN],[Source].[POSITION_REQUEST_TYPE_NAME_FR],[Source].[POSITION_REQUEST_TYPE_DESC_EN],[Source].[POSITION_REQUEST_TYPE_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[DATE_CREATED],[Source].[USER_UPDATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput1861581670;

DECLARE @mergeError1861581670 int,
@mergeCount1861581670 int,
@mergeCountIns1861581670 int,
@mergeCountUpd1861581670 int,
@mergeCountDel1861581670 int
SELECT @mergeError1861581670 = @@ERROR
SELECT @mergeCount1861581670 = COUNT(1), @mergeCountIns1861581670 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd1861581670 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel1861581670 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput1861581670
IF @mergeError1861581670 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_POSITION_REQUEST_TYPE]. Rows affected: ' + CAST(@mergeCount1861581670 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_POSITION_REQUEST_TYPE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount1861581670,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns1861581670,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd1861581670,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel1861581670,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_POSITION_REQUEST_TYPE] OFF
SET NOCOUNT OFF




