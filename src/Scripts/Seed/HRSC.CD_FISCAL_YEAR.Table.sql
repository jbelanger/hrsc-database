
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_FISCAL_YEAR] ON

DECLARE @mergeOutput1557580587 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_FISCAL_YEAR] AS [Target]
USING (VALUES
  (1,N'2013','2013-04-01T00:00:00','2014-03-31T23:59:59',NULL,N'Akhmentova, Elena [NC]','2013-05-16T10:36:25.447',NULL,NULL)
 ,(2,N'2012','2012-04-01T00:00:00','2013-03-31T23:59:59',NULL,N'Akhmentova, Elena [NC]','2013-05-16T10:37:03.833',NULL,NULL)
 ,(3,N'2014','2014-04-01T00:00:00','2015-03-31T23:59:59',NULL,N'Robichaud, Martin [NC]','2014-07-14T10:52:26.020',NULL,NULL)
 ,(4,N'2015','2015-04-01T00:00:00','2016-03-31T23:59:59',NULL,N'Lafortune, Jean-Luc [NC]','2015-02-04T11:47:58.877',NULL,NULL)
 ,(5,N'2016','2016-04-01T00:00:00','2017-03-31T23:59:59',NULL,N'Robichaud, Martin M [NC]','2016-06-01T16:28:57.840',NULL,NULL)
 ,(6,N'2017','2017-04-01T00:00:00','2018-03-31T23:59:59',NULL,N'Robichaud, Martin M [NC]','2017-07-14T11:27:28.240',NULL,NULL)
 ,(7,N'2018','2018-04-01T00:00:00','2019-03-31T23:59:59',NULL,N'Robichaud, Yves Y [NC]','2018-05-28T09:53:35.647',NULL,NULL)
) AS [Source] ([FISCAL_YEAR_ID],[FISCAL_YEAR],[FISCAL_YEAR_START_DATE],[FISCAL_YEAR_END_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
ON ([Target].[FISCAL_YEAR_ID] = [Source].[FISCAL_YEAR_ID])
WHEN MATCHED AND (
	NULLIF([Source].[FISCAL_YEAR], [Target].[FISCAL_YEAR]) IS NOT NULL OR NULLIF([Target].[FISCAL_YEAR], [Source].[FISCAL_YEAR]) IS NOT NULL OR 
	NULLIF([Source].[FISCAL_YEAR_START_DATE], [Target].[FISCAL_YEAR_START_DATE]) IS NOT NULL OR NULLIF([Target].[FISCAL_YEAR_START_DATE], [Source].[FISCAL_YEAR_START_DATE]) IS NOT NULL OR 
	NULLIF([Source].[FISCAL_YEAR_END_DATE], [Target].[FISCAL_YEAR_END_DATE]) IS NOT NULL OR NULLIF([Target].[FISCAL_YEAR_END_DATE], [Source].[FISCAL_YEAR_END_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[FISCAL_YEAR] = [Source].[FISCAL_YEAR], 
  [Target].[FISCAL_YEAR_START_DATE] = [Source].[FISCAL_YEAR_START_DATE], 
  [Target].[FISCAL_YEAR_END_DATE] = [Source].[FISCAL_YEAR_END_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([FISCAL_YEAR_ID],[FISCAL_YEAR],[FISCAL_YEAR_START_DATE],[FISCAL_YEAR_END_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
 VALUES([Source].[FISCAL_YEAR_ID],[Source].[FISCAL_YEAR],[Source].[FISCAL_YEAR_START_DATE],[Source].[FISCAL_YEAR_END_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[DATE_CREATED],[Source].[USER_UPDATED],[Source].[DATE_UPDATED])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE
OUTPUT $action INTO @mergeOutput1557580587;

DECLARE @mergeError1557580587 int,
@mergeCount1557580587 int,
@mergeCountIns1557580587 int,
@mergeCountUpd1557580587 int,
@mergeCountDel1557580587 int
SELECT @mergeError1557580587 = @@ERROR
SELECT @mergeCount1557580587 = COUNT(1), @mergeCountIns1557580587 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd1557580587 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel1557580587 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput1557580587
IF @mergeError1557580587 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_FISCAL_YEAR]. Rows affected: ' + CAST(@mergeCount1557580587 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_FISCAL_YEAR] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount1557580587,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns1557580587,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd1557580587,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel1557580587,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_FISCAL_YEAR] OFF
SET NOCOUNT OFF




