
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_ACTION_TYPE] ON

DECLARE @mergeOutput757577737 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_ACTION_TYPE] AS [Target]
USING (VALUES
  (1,N'PAR Resent',N'DIP ré-envoyée',N'PAR Resent',N'DIP ré-envoyée',NULL,N'SYSTEM',NULL,'2016-07-12T08:36:19.157',NULL,N'RSENT','2016-04-15T00:00:00')
 ,(2,N'Acknowledgment receipt received',N'Accusé de réception reçu',N'Acknowledgment receipt received',N'Accusé de réception reçu',NULL,N'SYSTEM',NULL,'2016-07-12T08:36:19.247',NULL,N'ACKNO','2016-04-15T00:00:00')
 ,(3,N'Pay Action Not Processed',N'Mouvement non traité',N'Pay Action Not Processed',N'Mouvement non traité',NULL,N'SYSTEM',NULL,'2016-07-12T08:36:19.247',NULL,N'NOPRO','2016-04-15T00:00:00')
 ,(4,N'PAR Confirmed',N'DIP confirmée',N'PAR Confirmed',N'DIP confirmée',NULL,N'SYSTEM',NULL,'2016-07-12T08:36:19.250',NULL,N'CONFI','2016-04-15T00:00:00')
 ,(5,N'Action entered in PeopleSoft – Request to send to Pay Center',N'Action entrée dans PeopleSoft – Demande à envoyer à la paye',N'Action entered in PeopleSoft – Request to send to Pay Center',N'Action entrée dans PeopleSoft – Demande à envoyer à la paye',NULL,N'yves.robichaud',NULL,'2017-07-06T12:48:09.963',NULL,N'PAct1','2017-07-06T00:00:00')
 ,(6,N'Action entered in PeopleSoft - Resolved Request',N'Action entrée dans PeopleSoft – Demande résolue',N'Action entered in PeopleSoft - Resolved Request',N'Action entrée dans PeopleSoft – Demande résolue',NULL,N'yves.robichaud',NULL,'2017-07-06T12:48:40.890',NULL,N'PAct2','2017-07-06T00:00:00')
 ,(7,N'Update position with an existing job code',N'Mise à jour de numéro de poste avec numéro d''emploi existant',N'Update position with an existing job code',N'Mise à jour de numéro de poste avec numéro d''emploi existant',NULL,N'tony.paradis',NULL,'2017-07-14T07:42:44.037',NULL,N'UDPOS','2017-07-14T07:42:44.037')
) AS [Source] ([ACTION_TYPE_ID],[ACTION_TYPE_NAME_EN],[ACTION_TYPE_NAME_FR],[ACTION_TYPE_DESC_EN],[ACTION_TYPE_DESC_FR],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[ACTION_TYPE_CODE],[EFFECTIVE_DATE])
ON ([Target].[ACTION_TYPE_ID] = [Source].[ACTION_TYPE_ID])
WHEN MATCHED AND (
	NULLIF([Source].[ACTION_TYPE_NAME_EN], [Target].[ACTION_TYPE_NAME_EN]) IS NOT NULL OR NULLIF([Target].[ACTION_TYPE_NAME_EN], [Source].[ACTION_TYPE_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[ACTION_TYPE_NAME_FR], [Target].[ACTION_TYPE_NAME_FR]) IS NOT NULL OR NULLIF([Target].[ACTION_TYPE_NAME_FR], [Source].[ACTION_TYPE_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[ACTION_TYPE_DESC_EN], [Target].[ACTION_TYPE_DESC_EN]) IS NOT NULL OR NULLIF([Target].[ACTION_TYPE_DESC_EN], [Source].[ACTION_TYPE_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[ACTION_TYPE_DESC_FR], [Target].[ACTION_TYPE_DESC_FR]) IS NOT NULL OR NULLIF([Target].[ACTION_TYPE_DESC_FR], [Source].[ACTION_TYPE_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[ACTION_TYPE_CODE], [Target].[ACTION_TYPE_CODE]) IS NOT NULL OR NULLIF([Target].[ACTION_TYPE_CODE], [Source].[ACTION_TYPE_CODE]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[ACTION_TYPE_NAME_EN] = [Source].[ACTION_TYPE_NAME_EN], 
  [Target].[ACTION_TYPE_NAME_FR] = [Source].[ACTION_TYPE_NAME_FR], 
  [Target].[ACTION_TYPE_DESC_EN] = [Source].[ACTION_TYPE_DESC_EN], 
  [Target].[ACTION_TYPE_DESC_FR] = [Source].[ACTION_TYPE_DESC_FR], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED], 
  [Target].[ACTION_TYPE_CODE] = [Source].[ACTION_TYPE_CODE], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([ACTION_TYPE_ID],[ACTION_TYPE_NAME_EN],[ACTION_TYPE_NAME_FR],[ACTION_TYPE_DESC_EN],[ACTION_TYPE_DESC_FR],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[ACTION_TYPE_CODE],[EFFECTIVE_DATE])
 VALUES([Source].[ACTION_TYPE_ID],[Source].[ACTION_TYPE_NAME_EN],[Source].[ACTION_TYPE_NAME_FR],[Source].[ACTION_TYPE_DESC_EN],[Source].[ACTION_TYPE_DESC_FR],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[USER_UPDATED],[Source].[DATE_CREATED],[Source].[DATE_UPDATED],[Source].[ACTION_TYPE_CODE],[Source].[EFFECTIVE_DATE])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE
OUTPUT $action INTO @mergeOutput757577737;

DECLARE @mergeError757577737 int,
@mergeCount757577737 int,
@mergeCountIns757577737 int,
@mergeCountUpd757577737 int,
@mergeCountDel757577737 int
SELECT @mergeError757577737 = @@ERROR
SELECT @mergeCount757577737 = COUNT(1), @mergeCountIns757577737 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd757577737 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel757577737 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput757577737
IF @mergeError757577737 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_ACTION_TYPE]. Rows affected: ' + CAST(@mergeCount757577737 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_ACTION_TYPE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount757577737,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns757577737,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd757577737,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel757577737,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_ACTION_TYPE] OFF
SET NOCOUNT OFF




