
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[GD_ACCOUNT_EMAIL] ON

DECLARE @mergeOutput1054626800 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[GD_ACCOUNT_EMAIL] AS [Target]
USING (VALUES
  (1,N'CFOB',N'NC-FAS-SFA-NHQ-ACC-F@hrdc-drhc.net',NULL,NULL,'2013-06-21T00:00:00',N'NC-FAS-SFA-NHQ-ACC-F@hrdc-drhc.net',NULL,N'yves.robichaud','2013-06-21T00:00:00',NULL,NULL,4)
 ,(3,N'Atlantic ISB',N'ATL-INT-SECURITY-SECURITE-GD@hrsdc-rhdcc.gc.ca',NULL,NULL,'2013-06-21T00:00:00',N'ATL-INT-SECURITY-SECURITE-GD@hrsdc-rhdcc.gc.ca',NULL,N'yves.robichaud','2013-06-21T00:00:00',NULL,NULL,3)
 ,(4,N'NCR ISB',N'NC-SECURITY-SERVICES@hrsdc-rhdcc.gc.ca',NULL,NULL,'2013-06-21T00:00:00',N'NC-SECURITY-SERVICES@hrsdc-rhdcc.gc.ca',NULL,N'yves.robichaud','2013-06-21T00:00:00',NULL,NULL,3)
 ,(5,N'Ontario ISB',N'on-toronto_rhq_ar-sr@servicecanada.gc.ca',NULL,NULL,'2013-06-21T00:00:00',N'on-toronto_rhq_ar-sr@servicecanada.gc.ca',NULL,N'yves.robichaud','2013-06-21T00:00:00',NULL,NULL,3)
 ,(6,N'Quebec ISB',N'QC-DIIS-IISD-SECPER-PERSEC-GD@servicecanada.gc.ca',NULL,NULL,'2013-06-21T00:00:00',N'QC-DIIS-IISD-SECPER-PERSEC-GD@servicecanada.gc.ca',NULL,N'yves.robichaud','2013-06-21T00:00:00',NULL,NULL,3)
 ,(7,N'West ISB',N'W-T-Security-Securite-GD@servicecanada.gc.ca',NULL,NULL,'2013-06-21T00:00:00',N'W-T-Security-Securite-GD@servicecanada.gc.ca',NULL,N'yves.robichaud','2013-06-21T00:00:00',NULL,NULL,3)
 ,(10,N'C&B',N'NA-COMP-REM-GD@hrsdc-rhdcc.gc.ca',NULL,NULL,'2013-06-21T00:00:00',N'NA-COMP-REM-GD@hrsdc-rhdcc.gc.ca','2020-01-17T09:12:09.090',N'yves.robichaud','2013-06-21T00:00:00',NULL,NULL,1)
 ,(11,N'CFOB salary',N'NC-IS_SALARY_RECEIVABLES-GD@hrsdc-rhdcc.gc.ca',NULL,NULL,'2013-06-21T00:00:00',N'NC-IS_SALARY_RECEIVABLES-GD@hrsdc-rhdcc.gc.ca',NULL,N'jeanluc.lafortune','2013-06-21T00:00:00',NULL,'2013-06-21T00:00:00',2)
 ,(12,N'C&B Consultants Separation Clearance',N'C&B Consultants Separation Clearance',NULL,NULL,'2015-05-27T07:39:57.930',N'NA-ConsultantSeperation-GD@hrdc-drhc.net',NULL,N'yves.robichaud','2015-05-27T07:39:57.930',NULL,NULL,6)
 ,(13,N'PAR Email',N'PAR Email',N'EMAIL SENT TO NPC FOR ACTION',N'EMAIL ENVOYE A CNP POUR ACTION','2015-07-31T00:00:00',N'NA-ESDC-EDSC-PSPC-CSPFP-GD@hrsdc-rhdcc.gc.ca',NULL,N'HRDC-DRHC\claude.a.mukam','2015-07-31T11:18:52',N'eric.nolet','2016-04-21T08:49:14.363',7)
 ,(14,N'PAR Email2',N'PAR Email2',N'EMAIL SENT TO NPC FOR ACTION',N'EMAIL SENT TO NPC FOR ACTION','2016-04-21T00:00:00',N'NC-CORP-COMP-REMUN-MIN-Resp-Rep-GD@hrsdc-rhdcc.gc.ca',NULL,N'eric.nolet','2016-04-21T08:48:57.090',N'eric.nolet','2016-04-21T08:49:29.580',7)
) AS [Source] ([GD_ACCOUNT_EMAIL_ID],[GD_ACCOUNT_EMAIL_NAME_EN],[GD_ACCOUNT_EMAIL_NAME_FR],[GD_ACCOUNT_EMAIL_DESC_EN],[GD_ACCOUNT_EMAIL_DESC_FR],[EFFECTIVE_DATE],[GD_ACCOUNT_EMAIL],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED],[GD_ACCOUNT_TYPE_ID])
ON ([Target].[GD_ACCOUNT_EMAIL_ID] = [Source].[GD_ACCOUNT_EMAIL_ID])
WHEN MATCHED AND (
	NULLIF([Source].[GD_ACCOUNT_EMAIL_NAME_EN], [Target].[GD_ACCOUNT_EMAIL_NAME_EN]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_EMAIL_NAME_EN], [Source].[GD_ACCOUNT_EMAIL_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[GD_ACCOUNT_EMAIL_NAME_FR], [Target].[GD_ACCOUNT_EMAIL_NAME_FR]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_EMAIL_NAME_FR], [Source].[GD_ACCOUNT_EMAIL_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[GD_ACCOUNT_EMAIL_DESC_EN], [Target].[GD_ACCOUNT_EMAIL_DESC_EN]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_EMAIL_DESC_EN], [Source].[GD_ACCOUNT_EMAIL_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[GD_ACCOUNT_EMAIL_DESC_FR], [Target].[GD_ACCOUNT_EMAIL_DESC_FR]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_EMAIL_DESC_FR], [Source].[GD_ACCOUNT_EMAIL_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[GD_ACCOUNT_EMAIL], [Target].[GD_ACCOUNT_EMAIL]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_EMAIL], [Source].[GD_ACCOUNT_EMAIL]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[GD_ACCOUNT_TYPE_ID], [Target].[GD_ACCOUNT_TYPE_ID]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_TYPE_ID], [Source].[GD_ACCOUNT_TYPE_ID]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[GD_ACCOUNT_EMAIL_NAME_EN] = [Source].[GD_ACCOUNT_EMAIL_NAME_EN], 
  [Target].[GD_ACCOUNT_EMAIL_NAME_FR] = [Source].[GD_ACCOUNT_EMAIL_NAME_FR], 
  [Target].[GD_ACCOUNT_EMAIL_DESC_EN] = [Source].[GD_ACCOUNT_EMAIL_DESC_EN], 
  [Target].[GD_ACCOUNT_EMAIL_DESC_FR] = [Source].[GD_ACCOUNT_EMAIL_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[GD_ACCOUNT_EMAIL] = [Source].[GD_ACCOUNT_EMAIL], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED], 
  [Target].[GD_ACCOUNT_TYPE_ID] = [Source].[GD_ACCOUNT_TYPE_ID]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([GD_ACCOUNT_EMAIL_ID],[GD_ACCOUNT_EMAIL_NAME_EN],[GD_ACCOUNT_EMAIL_NAME_FR],[GD_ACCOUNT_EMAIL_DESC_EN],[GD_ACCOUNT_EMAIL_DESC_FR],[EFFECTIVE_DATE],[GD_ACCOUNT_EMAIL],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED],[GD_ACCOUNT_TYPE_ID])
 VALUES([Source].[GD_ACCOUNT_EMAIL_ID],[Source].[GD_ACCOUNT_EMAIL_NAME_EN],[Source].[GD_ACCOUNT_EMAIL_NAME_FR],[Source].[GD_ACCOUNT_EMAIL_DESC_EN],[Source].[GD_ACCOUNT_EMAIL_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[GD_ACCOUNT_EMAIL],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[DATE_CREATED],[Source].[USER_UPDATED],[Source].[DATE_UPDATED],[Source].[GD_ACCOUNT_TYPE_ID])
OUTPUT $action INTO @mergeOutput1054626800;

DECLARE @mergeError1054626800 int,
@mergeCount1054626800 int,
@mergeCountIns1054626800 int,
@mergeCountUpd1054626800 int,
@mergeCountDel1054626800 int
SELECT @mergeError1054626800 = @@ERROR
SELECT @mergeCount1054626800 = COUNT(1), @mergeCountIns1054626800 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd1054626800 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel1054626800 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput1054626800
IF @mergeError1054626800 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[GD_ACCOUNT_EMAIL]. Rows affected: ' + CAST(@mergeCount1054626800 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[GD_ACCOUNT_EMAIL] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount1054626800,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns1054626800,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd1054626800,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel1054626800,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[GD_ACCOUNT_EMAIL] OFF
SET NOCOUNT OFF




