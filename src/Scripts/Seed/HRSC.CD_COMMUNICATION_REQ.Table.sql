
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

DECLARE @mergeOutput743777807 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_COMMUNICATION_REQ] AS [Target]
USING (VALUES
  (1,N'PUBL',N'Service to Public',N'Services au public',NULL,N'System',NULL,'2018-06-13T07:21:20.810',NULL,NULL)
 ,(2,N'PERS',N'Personal Services',N'Services personnels',NULL,N'System',NULL,'2018-06-13T07:21:20.810',NULL,NULL)
 ,(3,N'CENTR',N'Central Services',N'Services centraux',NULL,N'System',NULL,'2018-06-13T07:21:20.810',NULL,NULL)
 ,(4,N'SUPR',N'Supervisory Function',N'Fonction surveillance',NULL,N'System',NULL,'2018-06-13T07:21:20.810',NULL,NULL)
 ,(5,N'GRIEV',N'Grievances',N'Griefs',NULL,N'System',NULL,'2018-06-13T07:21:20.810',NULL,NULL)
 ,(6,N'OTHER',N'Other',N'Autres',NULL,N'System',NULL,'2018-06-13T07:21:20.810',NULL,NULL)
) AS [Source] ([COMMUNICATION_REQ_ID],[COMMUNICATION_REQ_CODE],[COMMUNICATION_REQ_NAME_EN],[COMMUNICATION_REQ_NAME_FR],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[EFFECTIVE_DATE])
ON ([Target].[COMMUNICATION_REQ_ID] = [Source].[COMMUNICATION_REQ_ID])
WHEN MATCHED AND (
	NULLIF([Source].[COMMUNICATION_REQ_CODE], [Target].[COMMUNICATION_REQ_CODE]) IS NOT NULL OR NULLIF([Target].[COMMUNICATION_REQ_CODE], [Source].[COMMUNICATION_REQ_CODE]) IS NOT NULL OR 
	NULLIF([Source].[COMMUNICATION_REQ_NAME_EN], [Target].[COMMUNICATION_REQ_NAME_EN]) IS NOT NULL OR NULLIF([Target].[COMMUNICATION_REQ_NAME_EN], [Source].[COMMUNICATION_REQ_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[COMMUNICATION_REQ_NAME_FR], [Target].[COMMUNICATION_REQ_NAME_FR]) IS NOT NULL OR NULLIF([Target].[COMMUNICATION_REQ_NAME_FR], [Source].[COMMUNICATION_REQ_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[COMMUNICATION_REQ_CODE] = [Source].[COMMUNICATION_REQ_CODE], 
  [Target].[COMMUNICATION_REQ_NAME_EN] = [Source].[COMMUNICATION_REQ_NAME_EN], 
  [Target].[COMMUNICATION_REQ_NAME_FR] = [Source].[COMMUNICATION_REQ_NAME_FR], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([COMMUNICATION_REQ_ID],[COMMUNICATION_REQ_CODE],[COMMUNICATION_REQ_NAME_EN],[COMMUNICATION_REQ_NAME_FR],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[EFFECTIVE_DATE])
 VALUES([Source].[COMMUNICATION_REQ_ID],[Source].[COMMUNICATION_REQ_CODE],[Source].[COMMUNICATION_REQ_NAME_EN],[Source].[COMMUNICATION_REQ_NAME_FR],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[USER_UPDATED],[Source].[DATE_CREATED],[Source].[DATE_UPDATED],[Source].[EFFECTIVE_DATE])
OUTPUT $action INTO @mergeOutput743777807;

DECLARE @mergeError743777807 int,
@mergeCount743777807 int,
@mergeCountIns743777807 int,
@mergeCountUpd743777807 int,
@mergeCountDel743777807 int
SELECT @mergeError743777807 = @@ERROR
SELECT @mergeCount743777807 = COUNT(1), @mergeCountIns743777807 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd743777807 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel743777807 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput743777807
IF @mergeError743777807 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_COMMUNICATION_REQ]. Rows affected: ' + CAST(@mergeCount743777807 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_COMMUNICATION_REQ] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount743777807,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns743777807,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd743777807,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel743777807,0) AS VARCHAR(100)) + ')' ;
 END



SET NOCOUNT OFF




