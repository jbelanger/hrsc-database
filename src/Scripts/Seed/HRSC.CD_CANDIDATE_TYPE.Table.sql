
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_CANDIDATE_TYPE] ON

DECLARE @mergeOutput578205210 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_CANDIDATE_TYPE] AS [Target]
USING (VALUES
  (1,NULL,N'NA',N'N/A',N'N/A',N'Not applicable',N'Non applicable','2023-01-01T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00')
 ,(2,NULL,N'EXGC',N'External to the Government of Canada',N'Externe au Gouvernement du Canada',N'Candidate is external to the Government of Canada',N'Candidat provient de l''externe du Gouvernement du Canada','2023-01-01T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00')
 ,(3,NULL,N'XESDC',N'External to ESDC but within the Government of Canada',N'Externe de l''EDSC mais au sein du Gouvernement du Canada',N'Candidate is external to ESDC but from within the Government of Canada',N'Candidat provient de l''externe de l''EDSC mais au sein du Gouvernement du Canada','2023-01-01T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00')
 ,(4,NULL,N'XIITB',N'Within ESDC but External to IITB',N'Au sein de l''EDSC mais a l''externe de la DGIIT',N'Candidate is from within ESDC but external to IITB',N'Candidat provient de l''EDSC mais a l''externe de la DGIIT','2023-01-01T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00')
 ,(5,NULL,N'IIITB',N'Within IITB',N'Au sein de la DGIIT',N'Candidate is from Within IITB',N'Candidat provient de la DGIIT','2023-01-01T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00',N'HRSC 4.13','2022-12-20T09:00:00')
) AS [Source] ([CANDIDATE_TYPE_ID],[EXPIRY_DATE],[CANDIDATE_TYPE_CODE],[CANDIDATE_TYPE_NAME_EN],[CANDIDATE_TYPE_NAME_FR],[CANDIDATE_TYPE_DESC_EN],[CANDIDATE_TYPE_DESC_FR],[EFFECTIVE_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
ON ([Target].[CANDIDATE_TYPE_ID] = [Source].[CANDIDATE_TYPE_ID])
WHEN MATCHED AND (
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[CANDIDATE_TYPE_CODE], [Target].[CANDIDATE_TYPE_CODE]) IS NOT NULL OR NULLIF([Target].[CANDIDATE_TYPE_CODE], [Source].[CANDIDATE_TYPE_CODE]) IS NOT NULL OR 
	NULLIF([Source].[CANDIDATE_TYPE_NAME_EN], [Target].[CANDIDATE_TYPE_NAME_EN]) IS NOT NULL OR NULLIF([Target].[CANDIDATE_TYPE_NAME_EN], [Source].[CANDIDATE_TYPE_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[CANDIDATE_TYPE_NAME_FR], [Target].[CANDIDATE_TYPE_NAME_FR]) IS NOT NULL OR NULLIF([Target].[CANDIDATE_TYPE_NAME_FR], [Source].[CANDIDATE_TYPE_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[CANDIDATE_TYPE_DESC_EN], [Target].[CANDIDATE_TYPE_DESC_EN]) IS NOT NULL OR NULLIF([Target].[CANDIDATE_TYPE_DESC_EN], [Source].[CANDIDATE_TYPE_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[CANDIDATE_TYPE_DESC_FR], [Target].[CANDIDATE_TYPE_DESC_FR]) IS NOT NULL OR NULLIF([Target].[CANDIDATE_TYPE_DESC_FR], [Source].[CANDIDATE_TYPE_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[CANDIDATE_TYPE_CODE] = [Source].[CANDIDATE_TYPE_CODE], 
  [Target].[CANDIDATE_TYPE_NAME_EN] = [Source].[CANDIDATE_TYPE_NAME_EN], 
  [Target].[CANDIDATE_TYPE_NAME_FR] = [Source].[CANDIDATE_TYPE_NAME_FR], 
  [Target].[CANDIDATE_TYPE_DESC_EN] = [Source].[CANDIDATE_TYPE_DESC_EN], 
  [Target].[CANDIDATE_TYPE_DESC_FR] = [Source].[CANDIDATE_TYPE_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([CANDIDATE_TYPE_ID],[EXPIRY_DATE],[CANDIDATE_TYPE_CODE],[CANDIDATE_TYPE_NAME_EN],[CANDIDATE_TYPE_NAME_FR],[CANDIDATE_TYPE_DESC_EN],[CANDIDATE_TYPE_DESC_FR],[EFFECTIVE_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
 VALUES([Source].[CANDIDATE_TYPE_ID],[Source].[EXPIRY_DATE],[Source].[CANDIDATE_TYPE_CODE],[Source].[CANDIDATE_TYPE_NAME_EN],[Source].[CANDIDATE_TYPE_NAME_FR],[Source].[CANDIDATE_TYPE_DESC_EN],[Source].[CANDIDATE_TYPE_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[USER_CREATED],[Source].[DATE_CREATED],[Source].[USER_UPDATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput578205210;

DECLARE @mergeError578205210 int,
@mergeCount578205210 int,
@mergeCountIns578205210 int,
@mergeCountUpd578205210 int,
@mergeCountDel578205210 int
SELECT @mergeError578205210 = @@ERROR
SELECT @mergeCount578205210 = COUNT(1), @mergeCountIns578205210 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd578205210 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel578205210 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput578205210
IF @mergeError578205210 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_CANDIDATE_TYPE]. Rows affected: ' + CAST(@mergeCount578205210 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_CANDIDATE_TYPE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount578205210,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns578205210,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd578205210,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel578205210,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_CANDIDATE_TYPE] OFF
SET NOCOUNT OFF




