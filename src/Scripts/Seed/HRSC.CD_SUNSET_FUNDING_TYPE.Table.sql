
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_SUNSET_FUNDING_TYPE] ON

DECLARE @mergeOutput978102525 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_SUNSET_FUNDING_TYPE] AS [Target]
USING (VALUES
  (1,N'NO-01',N'No -  Does not apply to extension period nor to previous term employment period',N'Non - Ne s''applique pas à la période de prolongation ni à la période d''emploi précédente',NULL,NULL,'2017-05-11',NULL,N'michel.tardif','2017-05-11',NULL,NULL)
 ,(2,N'NO-02',N'No -  Does not apply to extension period but applied to previous term employment period',N'Non - Ne s''applique pas à la période de prolongation mais s''appliquait à la période d''emploi précédente',NULL,NULL,'2017-05-11',NULL,N'michel.tardif','2017-05-11',NULL,NULL)
 ,(3,N'YES01',N'Yes - Applies to the extension period',N'Oui - S''applique à la période de prolongation',NULL,NULL,'2017-05-11',NULL,N'michel.tardif','2017-05-11',NULL,NULL)
) AS [Source] ([SUNSET_FUNDING_TYPE_ID],[SUNSET_FUNDING_TYPE_CODE],[SUNSET_FUNDING_TYPE_NAME_EN],[SUNSET_FUNDING_TYPE_NAME_FR],[SUNSET_FUNDING_TYPE_DESC_EN],[SUNSET_FUNDING_TYPE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
ON ([Target].[SUNSET_FUNDING_TYPE_ID] = [Source].[SUNSET_FUNDING_TYPE_ID])
WHEN MATCHED AND (
	NULLIF([Source].[SUNSET_FUNDING_TYPE_CODE], [Target].[SUNSET_FUNDING_TYPE_CODE]) IS NOT NULL OR NULLIF([Target].[SUNSET_FUNDING_TYPE_CODE], [Source].[SUNSET_FUNDING_TYPE_CODE]) IS NOT NULL OR 
	NULLIF([Source].[SUNSET_FUNDING_TYPE_NAME_EN], [Target].[SUNSET_FUNDING_TYPE_NAME_EN]) IS NOT NULL OR NULLIF([Target].[SUNSET_FUNDING_TYPE_NAME_EN], [Source].[SUNSET_FUNDING_TYPE_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[SUNSET_FUNDING_TYPE_NAME_FR], [Target].[SUNSET_FUNDING_TYPE_NAME_FR]) IS NOT NULL OR NULLIF([Target].[SUNSET_FUNDING_TYPE_NAME_FR], [Source].[SUNSET_FUNDING_TYPE_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[SUNSET_FUNDING_TYPE_DESC_EN], [Target].[SUNSET_FUNDING_TYPE_DESC_EN]) IS NOT NULL OR NULLIF([Target].[SUNSET_FUNDING_TYPE_DESC_EN], [Source].[SUNSET_FUNDING_TYPE_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[SUNSET_FUNDING_TYPE_DESC_FR], [Target].[SUNSET_FUNDING_TYPE_DESC_FR]) IS NOT NULL OR NULLIF([Target].[SUNSET_FUNDING_TYPE_DESC_FR], [Source].[SUNSET_FUNDING_TYPE_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[SUNSET_FUNDING_TYPE_CODE] = [Source].[SUNSET_FUNDING_TYPE_CODE], 
  [Target].[SUNSET_FUNDING_TYPE_NAME_EN] = [Source].[SUNSET_FUNDING_TYPE_NAME_EN], 
  [Target].[SUNSET_FUNDING_TYPE_NAME_FR] = [Source].[SUNSET_FUNDING_TYPE_NAME_FR], 
  [Target].[SUNSET_FUNDING_TYPE_DESC_EN] = [Source].[SUNSET_FUNDING_TYPE_DESC_EN], 
  [Target].[SUNSET_FUNDING_TYPE_DESC_FR] = [Source].[SUNSET_FUNDING_TYPE_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([SUNSET_FUNDING_TYPE_ID],[SUNSET_FUNDING_TYPE_CODE],[SUNSET_FUNDING_TYPE_NAME_EN],[SUNSET_FUNDING_TYPE_NAME_FR],[SUNSET_FUNDING_TYPE_DESC_EN],[SUNSET_FUNDING_TYPE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
 VALUES([Source].[SUNSET_FUNDING_TYPE_ID],[Source].[SUNSET_FUNDING_TYPE_CODE],[Source].[SUNSET_FUNDING_TYPE_NAME_EN],[Source].[SUNSET_FUNDING_TYPE_NAME_FR],[Source].[SUNSET_FUNDING_TYPE_DESC_EN],[Source].[SUNSET_FUNDING_TYPE_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[DATE_CREATED],[Source].[USER_UPDATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput978102525;

DECLARE @mergeError978102525 int,
@mergeCount978102525 int,
@mergeCountIns978102525 int,
@mergeCountUpd978102525 int,
@mergeCountDel978102525 int
SELECT @mergeError978102525 = @@ERROR
SELECT @mergeCount978102525 = COUNT(1), @mergeCountIns978102525 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd978102525 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel978102525 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput978102525
IF @mergeError978102525 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_SUNSET_FUNDING_TYPE]. Rows affected: ' + CAST(@mergeCount978102525 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_SUNSET_FUNDING_TYPE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount978102525,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns978102525,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd978102525,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel978102525,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_SUNSET_FUNDING_TYPE] OFF
SET NOCOUNT OFF




