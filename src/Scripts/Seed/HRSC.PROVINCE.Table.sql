
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

DECLARE @mergeOutput1497772393 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[PROVINCE] AS [Target]
USING (VALUES
  (35,N'NF',10,'2001-06-21T15:00:31','2002-10-21T00:00:00',N'Newfoundland',N'Terre-Neuve',2,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:06')
 ,(36,N'NS',12,'2001-06-21T15:00:31',NULL,N'Nova Scotia',N'Nouvelle-Écosse',3,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:12')
 ,(37,N'PE',11,'2001-06-21T15:00:31',NULL,N'Prince Edward Island',N'Île-du-Prince-Édouard',4,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:15')
 ,(38,N'NB',13,'2001-06-21T15:00:31',NULL,N'New Brunswick',N'Nouveau-Brunswick',5,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:18')
 ,(39,N'QC',24,'2001-06-21T15:00:31',NULL,N'Quebec',N'Québec',6,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:21')
 ,(40,N'ON',35,'2001-06-21T15:00:31',NULL,N'Ontario',N'Ontario',7,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:25')
 ,(41,N'MB',46,'2001-06-21T15:00:31',NULL,N'Manitoba',N'Manitoba',8,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:27')
 ,(42,N'SK',47,'2001-06-21T15:00:31',NULL,N'Saskatchewan',N'Saskatchewan',9,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:30')
 ,(43,N'AB',48,'2001-06-21T15:00:31',NULL,N'Alberta',N'Alberta',10,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:32')
 ,(44,N'BC',59,'2001-06-21T15:00:31',NULL,N'British Columbia',N'Colombie-Britannique',11,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:35')
 ,(45,N'NT',61,'2001-06-21T15:00:31',NULL,N'Northwest Territories',N'Territoires du Nord-Ouest',12,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:41')
 ,(46,N'YT',60,'2001-06-21T15:00:31','2005-06-13T14:15:17',N'Yukon',N'Yukon',13,N'IRM_ADMIN',N'CORPTAB_DEV_ISO','2002-05-10T11:36:39','2005-06-13T14:15:17')
 ,(47,N'NU',62,'2001-06-21T15:00:31',NULL,N'Nunavut',N'Nunavut',14,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:49')
 ,(48,N'NL',10,'2002-10-21T00:00:00',NULL,N'Newfoundland and Labrador',N'Terre-Neuve-et-Labrador',2,N'IRM_ADMIN',N'IRM_ADMIN','2002-05-10T11:36:39','2003-08-14T11:17:59')
 ,(49,N'YT',60,'2005-06-13T14:15:17',NULL,N'Yukon Territory',N'Territoire du Yukon',13,N'CORPTAB_DEV_ISO',NULL,'2005-06-13T14:15:17',NULL)
 ,(50,N'NH',99,'2016-11-22T00:00:00','2016-11-22T13:27:32.300',N'National Headquarters',N'National Headquarters',15,N'eric.nolet',N'eric.nolet','2016-11-22T13:27:29.427','2016-11-22T13:27:32.300')
) AS [Source] ([PROVINCE_ID],[PROVINCE_CODE],[PROVINCE_NUMBER],[EFFECTIVE_DATE],[EXPIRY_DATE],[ENGLISH_NAME],[FRENCH_NAME],[PROVINCE_SEQUENCE_NUMBER],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED])
ON ([Target].[PROVINCE_ID] = [Source].[PROVINCE_ID])
WHEN MATCHED AND (
	NULLIF([Source].[PROVINCE_CODE], [Target].[PROVINCE_CODE]) IS NOT NULL OR NULLIF([Target].[PROVINCE_CODE], [Source].[PROVINCE_CODE]) IS NOT NULL OR 
	NULLIF([Source].[PROVINCE_NUMBER], [Target].[PROVINCE_NUMBER]) IS NOT NULL OR NULLIF([Target].[PROVINCE_NUMBER], [Source].[PROVINCE_NUMBER]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[ENGLISH_NAME], [Target].[ENGLISH_NAME]) IS NOT NULL OR NULLIF([Target].[ENGLISH_NAME], [Source].[ENGLISH_NAME]) IS NOT NULL OR 
	NULLIF([Source].[FRENCH_NAME], [Target].[FRENCH_NAME]) IS NOT NULL OR NULLIF([Target].[FRENCH_NAME], [Source].[FRENCH_NAME]) IS NOT NULL OR 
	NULLIF([Source].[PROVINCE_SEQUENCE_NUMBER], [Target].[PROVINCE_SEQUENCE_NUMBER]) IS NOT NULL OR NULLIF([Target].[PROVINCE_SEQUENCE_NUMBER], [Source].[PROVINCE_SEQUENCE_NUMBER]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[PROVINCE_CODE] = [Source].[PROVINCE_CODE], 
  [Target].[PROVINCE_NUMBER] = [Source].[PROVINCE_NUMBER], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[ENGLISH_NAME] = [Source].[ENGLISH_NAME], 
  [Target].[FRENCH_NAME] = [Source].[FRENCH_NAME], 
  [Target].[PROVINCE_SEQUENCE_NUMBER] = [Source].[PROVINCE_SEQUENCE_NUMBER], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([PROVINCE_ID],[PROVINCE_CODE],[PROVINCE_NUMBER],[EFFECTIVE_DATE],[EXPIRY_DATE],[ENGLISH_NAME],[FRENCH_NAME],[PROVINCE_SEQUENCE_NUMBER],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED])
 VALUES([Source].[PROVINCE_ID],[Source].[PROVINCE_CODE],[Source].[PROVINCE_NUMBER],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[ENGLISH_NAME],[Source].[FRENCH_NAME],[Source].[PROVINCE_SEQUENCE_NUMBER],[Source].[USER_CREATED],[Source].[USER_UPDATED],[Source].[DATE_CREATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput1497772393;

DECLARE @mergeError1497772393 int,
@mergeCount1497772393 int,
@mergeCountIns1497772393 int,
@mergeCountUpd1497772393 int,
@mergeCountDel1497772393 int
SELECT @mergeError1497772393 = @@ERROR
SELECT @mergeCount1497772393 = COUNT(1), @mergeCountIns1497772393 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd1497772393 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel1497772393 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput1497772393
IF @mergeError1497772393 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[PROVINCE]. Rows affected: ' + CAST(@mergeCount1497772393 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[PROVINCE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount1497772393,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns1497772393,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd1497772393,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel1497772393,0) AS VARCHAR(100)) + ')' ;
 END



SET NOCOUNT OFF




