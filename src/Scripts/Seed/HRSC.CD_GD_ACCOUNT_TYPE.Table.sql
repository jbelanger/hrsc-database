
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

DECLARE @mergeOutput1230627427 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_GD_ACCOUNT_TYPE] AS [Target]
USING (VALUES
  (1,N'CandB',N'Compensation and Benefits',N'R?mun?ration et avantages sociaux ',NULL,NULL,'2013-07-06T00:00:00','2013-07-06T00:00:00',N'yves.robichaud','2013-07-06T00:00:00',NULL,NULL)
 ,(2,N'CFOB',N'Chief Financial Officer Branch',N'Direction g?n?rale du dirigeant principal des finances',NULL,NULL,'2013-07-06T00:00:00','2013-07-06T00:00:00',N'yves.robichaud','2013-07-06T00:00:00',NULL,NULL)
 ,(3,N'ISB',N'Integrity Services Branch',N'Direction g?n?rale des services d?int?grit? ',NULL,NULL,'2013-07-06T00:00:00','2013-07-06T00:00:00',N'yves.robichaud','2013-07-06T00:00:00',NULL,NULL)
 ,(4,N'SALA',N'CFOB Salary',N'DGGPF Salaire',NULL,NULL,'2013-07-06T00:00:00','2013-07-06T00:00:00',N'jeanluc.lafortune','2013-07-06T00:00:00',NULL,NULL)
 ,(6,N'CBCon',N'Compensation and Benefits - Consultant',N'R?mun?ration et avantages sociaux - Consultant',NULL,NULL,'2015-05-27T07:39:57.893','2015-05-27T07:39:57.893',N'yves.robichaud','2015-05-27T07:39:57.893',NULL,NULL)
 ,(7,N'NPC',N'National Pay Center Email For Action',N'Email Centre National de la Paye pour action',NULL,NULL,'2015-07-31T11:16:36','2015-07-31T11:16:36',N'HRDC-DRHC\claude.a.mukam','2015-07-31T11:16:36',NULL,NULL)
) AS [Source] ([GD_ACCOUNT_TYPE_ID],[GD_ACCOUNT_TYPE_CODE],[GD_ACCOUNT_TYPE_NAME_EN],[GD_ACCOUNT_TYPE_NAME_FR],[GD_ACCOUNT_TYPE_DESC_EN],[GD_ACCOUNT_TYPE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
ON ([Target].[GD_ACCOUNT_TYPE_ID] = [Source].[GD_ACCOUNT_TYPE_ID])
WHEN MATCHED AND (
	NULLIF([Source].[GD_ACCOUNT_TYPE_CODE], [Target].[GD_ACCOUNT_TYPE_CODE]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_TYPE_CODE], [Source].[GD_ACCOUNT_TYPE_CODE]) IS NOT NULL OR 
	NULLIF([Source].[GD_ACCOUNT_TYPE_NAME_EN], [Target].[GD_ACCOUNT_TYPE_NAME_EN]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_TYPE_NAME_EN], [Source].[GD_ACCOUNT_TYPE_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[GD_ACCOUNT_TYPE_NAME_FR], [Target].[GD_ACCOUNT_TYPE_NAME_FR]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_TYPE_NAME_FR], [Source].[GD_ACCOUNT_TYPE_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[GD_ACCOUNT_TYPE_DESC_EN], [Target].[GD_ACCOUNT_TYPE_DESC_EN]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_TYPE_DESC_EN], [Source].[GD_ACCOUNT_TYPE_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[GD_ACCOUNT_TYPE_DESC_FR], [Target].[GD_ACCOUNT_TYPE_DESC_FR]) IS NOT NULL OR NULLIF([Target].[GD_ACCOUNT_TYPE_DESC_FR], [Source].[GD_ACCOUNT_TYPE_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[GD_ACCOUNT_TYPE_CODE] = [Source].[GD_ACCOUNT_TYPE_CODE], 
  [Target].[GD_ACCOUNT_TYPE_NAME_EN] = [Source].[GD_ACCOUNT_TYPE_NAME_EN], 
  [Target].[GD_ACCOUNT_TYPE_NAME_FR] = [Source].[GD_ACCOUNT_TYPE_NAME_FR], 
  [Target].[GD_ACCOUNT_TYPE_DESC_EN] = [Source].[GD_ACCOUNT_TYPE_DESC_EN], 
  [Target].[GD_ACCOUNT_TYPE_DESC_FR] = [Source].[GD_ACCOUNT_TYPE_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([GD_ACCOUNT_TYPE_ID],[GD_ACCOUNT_TYPE_CODE],[GD_ACCOUNT_TYPE_NAME_EN],[GD_ACCOUNT_TYPE_NAME_FR],[GD_ACCOUNT_TYPE_DESC_EN],[GD_ACCOUNT_TYPE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[DATE_CREATED],[USER_UPDATED],[DATE_UPDATED])
 VALUES([Source].[GD_ACCOUNT_TYPE_ID],[Source].[GD_ACCOUNT_TYPE_CODE],[Source].[GD_ACCOUNT_TYPE_NAME_EN],[Source].[GD_ACCOUNT_TYPE_NAME_FR],[Source].[GD_ACCOUNT_TYPE_DESC_EN],[Source].[GD_ACCOUNT_TYPE_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[DATE_CREATED],[Source].[USER_UPDATED],[Source].[DATE_UPDATED])
OUTPUT $action INTO @mergeOutput1230627427;

DECLARE @mergeError1230627427 int,
@mergeCount1230627427 int,
@mergeCountIns1230627427 int,
@mergeCountUpd1230627427 int,
@mergeCountDel1230627427 int
SELECT @mergeError1230627427 = @@ERROR
SELECT @mergeCount1230627427 = COUNT(1), @mergeCountIns1230627427 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd1230627427 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel1230627427 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput1230627427
IF @mergeError1230627427 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_GD_ACCOUNT_TYPE]. Rows affected: ' + CAST(@mergeCount1230627427 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_GD_ACCOUNT_TYPE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount1230627427,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns1230627427,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd1230627427,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel1230627427,0) AS VARCHAR(100)) + ')' ;
 END



SET NOCOUNT OFF




