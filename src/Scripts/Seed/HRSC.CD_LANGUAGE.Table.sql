
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_LANGUAGE] ON

DECLARE @mergeOutput1703677117 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_LANGUAGE] AS [Target]
USING (VALUES
  (4,N'English',N'Anglais',N'EN',N'AN',N'English',N'Anglais','2011-12-08T11:57:42.913',NULL,N'Gaetan',NULL,'2011-12-08T12:01:48.610',NULL,N'1')
 ,(5,N'French',N'Français',N'FR',N'FR',N'French',N'Français','2011-12-08T12:02:14.773',NULL,N'Gaetan',NULL,'2011-12-08T12:02:14.773',NULL,N'2')
 ,(6,N'Various',N'Divers',N'DV',N'DV',N'Divers',N'Divers','2012-06-01T13:18:34.407',NULL,N'eric.nolet',NULL,'2012-06-27T13:25:15.080',NULL,N'3')
 ,(8,N'No Preference',N'Aucune Préférence',N'NP',N'NP',N'No Preference',N'Aucune Préférence','2012-06-01T13:18:34.407',NULL,N'eric.nolet',NULL,'2012-06-27T13:26:56.637',NULL,N'4')
) AS [Source] ([LANGUAGE_ID],[LANGUAGE_NAME_EN],[LANGUAGE_NAME_FR],[LANGUAGE_ABRVTD_NAME_EN],[LANGUAGE_ABRVTD_NAME_FR],[LANGUAGE_DESC_EN],[LANGUAGE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[LANGUAGE_CODE2])
ON ([Target].[LANGUAGE_ID] = [Source].[LANGUAGE_ID])
WHEN MATCHED AND (	
	NULLIF([Source].[LANGUAGE_NAME_EN], [Target].[LANGUAGE_NAME_EN]) IS NOT NULL OR NULLIF([Target].[LANGUAGE_NAME_EN], [Source].[LANGUAGE_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[LANGUAGE_NAME_FR], [Target].[LANGUAGE_NAME_FR]) IS NOT NULL OR NULLIF([Target].[LANGUAGE_NAME_FR], [Source].[LANGUAGE_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[LANGUAGE_ABRVTD_NAME_EN], [Target].[LANGUAGE_ABRVTD_NAME_EN]) IS NOT NULL OR NULLIF([Target].[LANGUAGE_ABRVTD_NAME_EN], [Source].[LANGUAGE_ABRVTD_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[LANGUAGE_ABRVTD_NAME_FR], [Target].[LANGUAGE_ABRVTD_NAME_FR]) IS NOT NULL OR NULLIF([Target].[LANGUAGE_ABRVTD_NAME_FR], [Source].[LANGUAGE_ABRVTD_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[LANGUAGE_DESC_EN], [Target].[LANGUAGE_DESC_EN]) IS NOT NULL OR NULLIF([Target].[LANGUAGE_DESC_EN], [Source].[LANGUAGE_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[LANGUAGE_DESC_FR], [Target].[LANGUAGE_DESC_FR]) IS NOT NULL OR NULLIF([Target].[LANGUAGE_DESC_FR], [Source].[LANGUAGE_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[LANGUAGE_CODE2], [Target].[LANGUAGE_CODE2]) IS NOT NULL OR NULLIF([Target].[LANGUAGE_CODE2], [Source].[LANGUAGE_CODE2]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[LANGUAGE_NAME_EN] = [Source].[LANGUAGE_NAME_EN], 
  [Target].[LANGUAGE_NAME_FR] = [Source].[LANGUAGE_NAME_FR], 
  [Target].[LANGUAGE_ABRVTD_NAME_EN] = [Source].[LANGUAGE_ABRVTD_NAME_EN], 
  [Target].[LANGUAGE_ABRVTD_NAME_FR] = [Source].[LANGUAGE_ABRVTD_NAME_FR], 
  [Target].[LANGUAGE_DESC_EN] = [Source].[LANGUAGE_DESC_EN], 
  [Target].[LANGUAGE_DESC_FR] = [Source].[LANGUAGE_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED], 
  [Target].[LANGUAGE_CODE2] = [Source].[LANGUAGE_CODE2]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([LANGUAGE_ID],[LANGUAGE_NAME_EN],[LANGUAGE_NAME_FR],[LANGUAGE_ABRVTD_NAME_EN],[LANGUAGE_ABRVTD_NAME_FR],[LANGUAGE_DESC_EN],[LANGUAGE_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[LANGUAGE_CODE2])
 VALUES([Source].[LANGUAGE_ID],[Source].[LANGUAGE_NAME_EN],[Source].[LANGUAGE_NAME_FR],[Source].[LANGUAGE_ABRVTD_NAME_EN],[Source].[LANGUAGE_ABRVTD_NAME_FR],[Source].[LANGUAGE_DESC_EN],[Source].[LANGUAGE_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[USER_UPDATED],[Source].[DATE_CREATED],[Source].[DATE_UPDATED],[Source].[LANGUAGE_CODE2])
OUTPUT $action INTO @mergeOutput1703677117;

DECLARE @mergeError1703677117 int,
@mergeCount1703677117 int,
@mergeCountIns1703677117 int,
@mergeCountUpd1703677117 int,
@mergeCountDel1703677117 int
SELECT @mergeError1703677117 = @@ERROR
SELECT @mergeCount1703677117 = COUNT(1), @mergeCountIns1703677117 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd1703677117 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel1703677117 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput1703677117
IF @mergeError1703677117 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_LANGUAGE]. Rows affected: ' + CAST(@mergeCount1703677117 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_LANGUAGE] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount1703677117,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns1703677117,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd1703677117,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel1703677117,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_LANGUAGE] OFF
SET NOCOUNT OFF




