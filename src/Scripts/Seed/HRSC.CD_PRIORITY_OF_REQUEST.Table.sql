
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [HRSC].[CD_PRIORITY_OF_REQUEST] ON

DECLARE @mergeOutput1822629536 TABLE ( [DMLAction] VARCHAR(6) );
MERGE INTO [HRSC].[CD_PRIORITY_OF_REQUEST] AS [Target]
USING (VALUES
  (2,N'High',N'Haute',N'High',N'Haute','2011-12-08T15:55:24.230',NULL,N'Ga?tan',N'Ga?tan','2011-12-08T15:55:24.230','2011-12-29T10:31:21.477',N'HIGH',1)
 ,(3,N'Normal',N'Normale',N'Normal',N'Normale','2011-12-08T15:55:24.230',NULL,N'Ga?tan',N'Ga?tan','2011-12-08T15:55:24.230','2011-12-29T10:31:21.477',N'NORM',1)
 ,(4,N'Low',N'Basse',N'Low',N'Basse','2011-12-08T15:55:24.230',NULL,N'Ga?tan',N'Ga?tan','2011-12-08T15:55:24.230','2011-12-29T10:31:21.477',N'LOW',1)
) AS [Source] ([PRIORITY_OF_REQUEST_ID],[PRIORITY_OF_REQUEST_NAME_EN],[PRIORITY_OF_REQUEST_NAME_FR],[PRIORITY_OF_REQUEST_DESC_EN],[PRIORITY_OF_REQUEST_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[PRIORITY_OF_REQUEST_CODE],[SORT_ORDER])
ON ([Target].[PRIORITY_OF_REQUEST_ID] = [Source].[PRIORITY_OF_REQUEST_ID])
WHEN MATCHED AND (
	NULLIF([Source].[PRIORITY_OF_REQUEST_NAME_EN], [Target].[PRIORITY_OF_REQUEST_NAME_EN]) IS NOT NULL OR NULLIF([Target].[PRIORITY_OF_REQUEST_NAME_EN], [Source].[PRIORITY_OF_REQUEST_NAME_EN]) IS NOT NULL OR 
	NULLIF([Source].[PRIORITY_OF_REQUEST_NAME_FR], [Target].[PRIORITY_OF_REQUEST_NAME_FR]) IS NOT NULL OR NULLIF([Target].[PRIORITY_OF_REQUEST_NAME_FR], [Source].[PRIORITY_OF_REQUEST_NAME_FR]) IS NOT NULL OR 
	NULLIF([Source].[PRIORITY_OF_REQUEST_DESC_EN], [Target].[PRIORITY_OF_REQUEST_DESC_EN]) IS NOT NULL OR NULLIF([Target].[PRIORITY_OF_REQUEST_DESC_EN], [Source].[PRIORITY_OF_REQUEST_DESC_EN]) IS NOT NULL OR 
	NULLIF([Source].[PRIORITY_OF_REQUEST_DESC_FR], [Target].[PRIORITY_OF_REQUEST_DESC_FR]) IS NOT NULL OR NULLIF([Target].[PRIORITY_OF_REQUEST_DESC_FR], [Source].[PRIORITY_OF_REQUEST_DESC_FR]) IS NOT NULL OR 
	NULLIF([Source].[EFFECTIVE_DATE], [Target].[EFFECTIVE_DATE]) IS NOT NULL OR NULLIF([Target].[EFFECTIVE_DATE], [Source].[EFFECTIVE_DATE]) IS NOT NULL OR 
	NULLIF([Source].[EXPIRY_DATE], [Target].[EXPIRY_DATE]) IS NOT NULL OR NULLIF([Target].[EXPIRY_DATE], [Source].[EXPIRY_DATE]) IS NOT NULL OR 
	NULLIF([Source].[USER_CREATED], [Target].[USER_CREATED]) IS NOT NULL OR NULLIF([Target].[USER_CREATED], [Source].[USER_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[USER_UPDATED], [Target].[USER_UPDATED]) IS NOT NULL OR NULLIF([Target].[USER_UPDATED], [Source].[USER_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_CREATED], [Target].[DATE_CREATED]) IS NOT NULL OR NULLIF([Target].[DATE_CREATED], [Source].[DATE_CREATED]) IS NOT NULL OR 
	NULLIF([Source].[DATE_UPDATED], [Target].[DATE_UPDATED]) IS NOT NULL OR NULLIF([Target].[DATE_UPDATED], [Source].[DATE_UPDATED]) IS NOT NULL OR 
	NULLIF([Source].[PRIORITY_OF_REQUEST_CODE], [Target].[PRIORITY_OF_REQUEST_CODE]) IS NOT NULL OR NULLIF([Target].[PRIORITY_OF_REQUEST_CODE], [Source].[PRIORITY_OF_REQUEST_CODE]) IS NOT NULL OR 
	NULLIF([Source].[SORT_ORDER], [Target].[SORT_ORDER]) IS NOT NULL OR NULLIF([Target].[SORT_ORDER], [Source].[SORT_ORDER]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[PRIORITY_OF_REQUEST_NAME_EN] = [Source].[PRIORITY_OF_REQUEST_NAME_EN], 
  [Target].[PRIORITY_OF_REQUEST_NAME_FR] = [Source].[PRIORITY_OF_REQUEST_NAME_FR], 
  [Target].[PRIORITY_OF_REQUEST_DESC_EN] = [Source].[PRIORITY_OF_REQUEST_DESC_EN], 
  [Target].[PRIORITY_OF_REQUEST_DESC_FR] = [Source].[PRIORITY_OF_REQUEST_DESC_FR], 
  [Target].[EFFECTIVE_DATE] = [Source].[EFFECTIVE_DATE], 
  [Target].[EXPIRY_DATE] = [Source].[EXPIRY_DATE], 
  [Target].[USER_CREATED] = [Source].[USER_CREATED], 
  [Target].[USER_UPDATED] = [Source].[USER_UPDATED], 
  [Target].[DATE_CREATED] = [Source].[DATE_CREATED], 
  [Target].[DATE_UPDATED] = [Source].[DATE_UPDATED], 
  [Target].[PRIORITY_OF_REQUEST_CODE] = [Source].[PRIORITY_OF_REQUEST_CODE], 
  [Target].[SORT_ORDER] = [Source].[SORT_ORDER]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([PRIORITY_OF_REQUEST_ID],[PRIORITY_OF_REQUEST_NAME_EN],[PRIORITY_OF_REQUEST_NAME_FR],[PRIORITY_OF_REQUEST_DESC_EN],[PRIORITY_OF_REQUEST_DESC_FR],[EFFECTIVE_DATE],[EXPIRY_DATE],[USER_CREATED],[USER_UPDATED],[DATE_CREATED],[DATE_UPDATED],[PRIORITY_OF_REQUEST_CODE],[SORT_ORDER])
 VALUES([Source].[PRIORITY_OF_REQUEST_ID],[Source].[PRIORITY_OF_REQUEST_NAME_EN],[Source].[PRIORITY_OF_REQUEST_NAME_FR],[Source].[PRIORITY_OF_REQUEST_DESC_EN],[Source].[PRIORITY_OF_REQUEST_DESC_FR],[Source].[EFFECTIVE_DATE],[Source].[EXPIRY_DATE],[Source].[USER_CREATED],[Source].[USER_UPDATED],[Source].[DATE_CREATED],[Source].[DATE_UPDATED],[Source].[PRIORITY_OF_REQUEST_CODE],[Source].[SORT_ORDER])
OUTPUT $action INTO @mergeOutput1822629536;

DECLARE @mergeError1822629536 int,
@mergeCount1822629536 int,
@mergeCountIns1822629536 int,
@mergeCountUpd1822629536 int,
@mergeCountDel1822629536 int
SELECT @mergeError1822629536 = @@ERROR
SELECT @mergeCount1822629536 = COUNT(1), @mergeCountIns1822629536 = SUM(IIF([DMLAction] = 'INSERT', 1, 0)), @mergeCountUpd1822629536 = SUM(IIF([DMLAction] = 'UPDATE', 1, 0)), @mergeCountDel1822629536 = SUM (IIF([DMLAction] = 'DELETE', 1, 0)) FROM @mergeOutput1822629536
IF @mergeError1822629536 != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [HRSC].[CD_PRIORITY_OF_REQUEST]. Rows affected: ' + CAST(@mergeCount1822629536 AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[HRSC].[CD_PRIORITY_OF_REQUEST] rows affected by MERGE: ' + CAST(COALESCE(@mergeCount1822629536,0) AS VARCHAR(100)) + ' (Inserted: ' + CAST(COALESCE(@mergeCountIns1822629536,0) AS VARCHAR(100)) + '; Updated: ' + CAST(COALESCE(@mergeCountUpd1822629536,0) AS VARCHAR(100)) + '; Deleted: ' + CAST(COALESCE(@mergeCountDel1822629536,0) AS VARCHAR(100)) + ')' ;
 END




SET IDENTITY_INSERT [HRSC].[CD_PRIORITY_OF_REQUEST] OFF
SET NOCOUNT OFF




